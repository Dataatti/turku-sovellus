import Head from 'next/head';
import type { GetStaticProps, NextPage } from 'next';
import KerroKantasiWidget from 'components/kerrokantasi/KerroKantasiWidget';
import TurussaTapahtuuWidget from 'components/turussatapahtuu/TurussaTapahtuuWidget';
import LiikenneTiedotteetWidget from 'components/LiikenneTiedotteet/LiikenneTiedotteetWidget';
import { Grid } from '@mui/material';

import strapiClient from 'functions/strapi-client';
import { dehydrate, QueryClient } from 'react-query';
import { useTitles } from 'hooks/useTitles';
import { NostotWidget } from 'components/nostot/NostotWidget';

const Home: NextPage<{ locale: Lang }> = ({ locale }) => {
  const { data: titles } = useTitles();

  const turussaTapahtuu = titles?.data.data.find((el) => el.attributes.type === 'tapahtumat');
  const kerrokantasi = titles?.data.data.find((el) => el.attributes.type === 'kerrokantasi');
  const nostot = titles?.data.data.find((el) => el.attributes.type === 'nostot');

  return (
    <div>
      <Head>
        <title>Turku-Sovellus</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main>
        <Grid
          container
          sx={{ marginBottom: '16px' }}
          columnSpacing={{ xs: 1, sm: 2, md: 3 }}
          rowSpacing={2}
        >
          <Grid item md={6} xs={12}>
            <NostotWidget locale={locale} title={nostot?.attributes?.text || ''} />
          </Grid>
          <Grid item md={6} xs={12}>
            <TurussaTapahtuuWidget
              locale={locale}
              title={turussaTapahtuu?.attributes?.text || ''}
            />
          </Grid>
          <Grid item md={6} xs={12}>
            <KerroKantasiWidget locale={locale} title={kerrokantasi?.attributes?.text || ''} />
          </Grid>
          <Grid item xs={12} md={6}>
            <LiikenneTiedotteetWidget locale={locale} />
          </Grid>
        </Grid>
      </main>
    </div>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  const queryClient = new QueryClient();

  const { locale } = context;
  await queryClient.prefetchQuery(
    ['getTitles', locale],
    strapiClient.titles.list(locale || 'fi') as any
  );

  return {
    props: {
      locale: locale,
      dehydratedState: dehydrate(queryClient),
    },
  };
};

export default Home;
